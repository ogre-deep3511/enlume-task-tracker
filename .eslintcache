[{"C:\\dev\\Enlume\\enlume-task-tracker\\src\\index.js":"1","C:\\dev\\Enlume\\enlume-task-tracker\\src\\App.js":"2","C:\\dev\\Enlume\\enlume-task-tracker\\src\\reportWebVitals.js":"3","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Header.js":"4","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Tasks.js":"5","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\AddTask.js":"6","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Footer.js":"7","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\About.js":"8","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Button.js":"9","C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Task.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":2903,"mtime":1624526349526,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":737,"mtime":1624526564029,"results":"15","hashOfConfig":"12"},{"size":322,"mtime":1624526618503,"results":"16","hashOfConfig":"12"},{"size":1403,"mtime":1624526474719,"results":"17","hashOfConfig":"12"},{"size":248,"mtime":1624526538515,"results":"18","hashOfConfig":"12"},{"size":222,"mtime":1624526411288,"results":"19","hashOfConfig":"12"},{"size":461,"mtime":1624526509035,"results":"20","hashOfConfig":"12"},{"size":447,"mtime":1624526589236,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ctj7se",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\Enlume\\enlume-task-tracker\\src\\index.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\App.js",["43"],"import {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer)\n    }\n    getTasks();\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json();\n\n    return data;\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json();\n\n    return data;\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // // console.log(id);\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    // console.log(id);\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !==\n    id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    // console.log(id);\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    )\n  }\n\n  return (\n    \n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />        \n        <Route path='/' exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks \n                tasks={tasks} \n                onDelete={deleteTask} \n                onToggle={toggleReminder} \n              /> \n            ) : (\n              'No Tasks to show'\n            )}\n          </>\n        )} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  \n  );\n}\n\nexport default App;\n\n","C:\\dev\\Enlume\\enlume-task-tracker\\src\\reportWebVitals.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Header.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Tasks.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\AddTask.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Footer.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\About.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Button.js",[],"C:\\dev\\Enlume\\enlume-task-tracker\\src\\components\\Task.js",[],{"ruleId":"44","severity":1,"message":"45","line":82,"column":11,"nodeType":"46","messageId":"47","endLine":82,"endColumn":15},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]